//
//  main.cpp
//  Dynamic Programing, 1문제를 1번만 풀어야한다. (반복적계산X)
//
//  Created by 김민경 on 2020. 3. 3..
//  Copyright © 2020년 김민경. All rights reserved.
//
//  백준 11726  
//  D[n] = D[n-1] + D[n-2]

#include <iostream>

using namespace std;

int d[1001]; //0으로 초기화되어있다.

int dp(int x){
    if(x == 1)  return 1;
    if(x == 2)  return 2;
    if(d[x] != 0)   return d[x];  //반복계산하지 않도록 저장해둔 값 반환해준다.
    d[x] =  (dp(x - 1) + dp(x - 2))%10007; //재귀함수로만 코딩하면 시간이 너무 오래 걸린다.
    return d[x];
}

int main() {
    
    int N;
    cin >> N;
    
    cout << dp(N) << endl;
    
    return 0;
}
