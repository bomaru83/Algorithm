//
//  main.cpp
//  Dynamic Programing, 1문제를 1번만 풀어야한다. (반복적계산X)
//
//  Created by 김민경 on 2020. 3. 3..
//  Copyright © 2020년 김민경. All rights reserved.
//
//  백준 2133
//  점화식 보고 푼 문제 :(
//  D[n] = 3 * D[n-2] + 2 * (D[n-4] + D[n-6] + D[n-8] ... D[0])

#include <iostream>

using namespace std;

int d[1001]; //0으로 초기화되어있다.

int dp(int x){
    if(x % 2 == 1)  return 0;
    if(x == 0)  return 1;
    if(x == 2)  return 3;
    if(d[x] != 0)   return d[x];  //반복계산하지 않도록 저장해둔 값 반환해준다.
    int temp = dp(x - 2) * 3;
    for(int i = x-4;i>=0;i-=2){
        temp += dp(i) * 2;
    }
    d[x] = temp;
    return temp;
}

int main() {
    
    int N;
    cin >> N;
    
    cout << dp(N) << endl;
    
    return 0;
}
